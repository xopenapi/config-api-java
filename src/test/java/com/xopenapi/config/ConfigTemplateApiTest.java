/*
 * 配置服务API
 * 配置服务API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xopenapi.config;

import com.xopenapi.ApiException;
import com.xopenapi.config.model.BatchRetrieveConfigTemplateByKeysReq;
import com.xopenapi.config.model.CreateConfigTemplateReq;
import com.xopenapi.config.model.CursorQuery;
import com.xopenapi.config.model.IdsReq;
import com.xopenapi.config.model.InlineResponse2001;
import com.xopenapi.config.model.InlineResponse2005;
import com.xopenapi.config.model.InlineResponse2006;
import com.xopenapi.config.model.InlineResponse2007;
import com.xopenapi.config.model.InlineResponse2008;
import com.xopenapi.config.model.PageQuery;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigTemplateApi
 */
@Ignore
public class ConfigTemplateApiTest {

    private final ConfigTemplateApi api = new ConfigTemplateApi();

    
    /**
     * 批量删除配置模版
     *
     * 批量删除配置模版通过配置Id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateBatchDeletePostTest() throws ApiException {
        IdsReq idsReq = null;
        InlineResponse2001 response = api.configTemplateBatchDeletePost(idsReq);

        // TODO: test validations
    }
    
    /**
     * 查询配置模版
     *
     * 查询配置模版通过配置模版GroupID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateBatchRetrieveByGroupPostTest() throws ApiException {
        String groupName = null;
        InlineResponse2006 response = api.configTemplateBatchRetrieveByGroupPost(groupName);

        // TODO: test validations
    }
    
    /**
     * 查询配置模版
     *
     * 查询配置通过配置Keys
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateBatchRetrieveByKeysPostTest() throws ApiException {
        BatchRetrieveConfigTemplateByKeysReq batchRetrieveConfigTemplateByKeysReq = null;
        InlineResponse2006 response = api.configTemplateBatchRetrieveByKeysPost(batchRetrieveConfigTemplateByKeysReq);

        // TODO: test validations
    }
    
    /**
     * 批量查询配置模版
     *
     * 批量查询配置模版通过配置Id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateBatchRetrievePostTest() throws ApiException {
        IdsReq idsReq = null;
        InlineResponse2006 response = api.configTemplateBatchRetrievePost(idsReq);

        // TODO: test validations
    }
    
    /**
     * Cursor查询配置模版
     *
     * Cursor查询配置模版
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateCursorPostTest() throws ApiException {
        CursorQuery cursorQuery = null;
        InlineResponse2008 response = api.configTemplateCursorPost(cursorQuery);

        // TODO: test validations
    }
    
    /**
     * 删除配置模版
     *
     * 删除配置模版
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateIdDeleteTest() throws ApiException {
        String id = null;
        InlineResponse2001 response = api.configTemplateIdDelete(id);

        // TODO: test validations
    }
    
    /**
     * 查询配置模版
     *
     * 查询配置通过配置模版ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateIdGetTest() throws ApiException {
        String id = null;
        InlineResponse2005 response = api.configTemplateIdGet(id);

        // TODO: test validations
    }
    
    /**
     * Page查询配置模版
     *
     * Page查询配置模版
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplatePagePostTest() throws ApiException {
        PageQuery pageQuery = null;
        InlineResponse2007 response = api.configTemplatePagePost(pageQuery);

        // TODO: test validations
    }
    
    /**
     * 创建配置模版
     *
     * 创建配置模版
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplatePostTest() throws ApiException {
        CreateConfigTemplateReq createConfigTemplateReq = null;
        InlineResponse2005 response = api.configTemplatePost(createConfigTemplateReq);

        // TODO: test validations
    }
    
    /**
     * 查询配置模版
     *
     * 查询配置模版通过配置Key
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void configTemplateRetrieveByKeyPostTest() throws ApiException {
        String key = null;
        InlineResponse2005 response = api.configTemplateRetrieveByKeyPost(key);

        // TODO: test validations
    }
    
}
